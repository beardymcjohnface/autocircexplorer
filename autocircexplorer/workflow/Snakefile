
# Update default config with runtime config
configfile: os.path.join(workflow.basedir, "../", "config", "config.yaml")
configfile: os.path.join(workflow.basedir, "../", "config", "system_config.yaml")
config.update(config["autocircexplorer"]) # convenience if using namespaced config


# Rules files
include: os.path.join(workflow.basedir, "rules", "preflight.smk")
include: os.path.join(workflow.basedir, "rules", "alignment.smk")
include: os.path.join(workflow.basedir, "rules", "rmats.smk")
include: os.path.join(workflow.basedir, "rules", "circexplorer2.smk")
include: os.path.join(workflow.basedir, "rules", "ciri.smk")
include: os.path.join(workflow.basedir, "rules", "salmon.smk")
include: os.path.join(workflow.basedir, "rules", "fastqc.smk")



# Target rules
@targetRule
rule all:
    input:
        targets["fastqc"],
        targets["star"],
        targets["flagstat"],
        targets["rmats"],
        targets["ce2"],
        targets["ciri2"]


@targetRule
rule star:
    input:
        targets["star"],


@targetRule
rule salmon:
    input:
        targets["salmon"]


@targetRule
rule rmats:
    input:
        targets["rmats"]


@targetRule
rule ce2:
    input:
        targets["ce2"]


@targetRule
rule ciri2:
    input:
        targets["ciri2"]


@targetRule
rule multiqc:
    input:
        os.path.join(dirs["results"],"multiqc_report.html")


@targetRule
rule print_targets:
    run:
        print("\nTop level rules are: \n", file=sys.stderr)
        print("* " + "\n* ".join(target_rules) + "\n\n", file=sys.stderr)
